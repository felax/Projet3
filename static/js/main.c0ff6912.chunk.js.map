{"version":3,"sources":["Utils.js","components/Graph.js","components/GraphPane.js","components/FileSelect.js","components/DataItem.js","components/DataPane.js","components/UtilPane.js","App.js","index.js"],"names":["getBounds","itemIDs","items","start","Infinity","end","forEach","id","bounds","item","offset","step","yData","length","xData","getItemBounds","arange","stop","result","push","LegendItem","props","style","color","fontWeight","whiteSpace","overflow","onClick","e","delItem","name","Graph","this","graph","map","itemId","updGraphItem","graphId","add","border","resize","height","display","flexDirection","onDragOver","preventDefault","onDrop","Number","dataTransfer","getData","includes","flex","type","delGraph","String","width","paddingBottom","dygraph","Dygraph","labels","legend","connectSeparatedPoints","console","log","graphBounds","colors","dataArr","arrLength","Math","round","Array","fill","value","i","time","idx","scale2","data","arrays","arr","merge","updateOptions","file","dateWindow","axes","x","drawAxis","drawX","y","drawY","React","Component","GraphPane","state","graphs","Object","values","getActiveItems","entries","addGraph","defaultValue","onBlur","setState","target","defaultChecked","checked","onChange","getRandomColor","min","max","r","floor","random","g","b","toString","padStart","FileSelect","handleFileSelect","format","fileSelector","click","document","createElement","setAttribute","addEventListener","event","callback","files","reader","FileReader","csv","Papa","parse","skipEmptyLines","nPoints","parseOldTek","line","parseCustom","readAsText","loadCSV","addItem","disabled","hidden","DataItem","alignItems","margin","padding","borderRight","draggable","updItem","onDragStart","setData","placeholder","DataPane","borderWidth","UtilPane","borderStyle","App","nItems","nGraphs","bind","hasOwnProperty","splice","indexOf","sizes","gutterAlign","minSize","onDrag","window","dispatchEvent","Event","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c0ff6912.chunk.js","sourcesContent":["function getItemBounds(item) {\r\n  const start = item.offset;\r\n  const end = item.step ? \r\n    start + item.yData.length * item.step : \r\n    start + item.xData[item.xData.length - 1];\r\n  return [start, end]\r\n}\r\n\r\nexport function getBounds(itemIDs, items) {\r\n  let start = Infinity;\r\n  let end = -Infinity;\r\n  itemIDs.forEach(id => {\r\n    const bounds = getItemBounds(items[id]);\r\n    if (bounds[0] < start) start = bounds[0];\r\n    if (bounds[1] > end) end = bounds[1];\r\n  })\r\n  return [start, end];\r\n}\r\n\r\nexport function getStep(itemIDs, items) {\r\n  let step = Infinity;\r\n  itemIDs.forEach(id => {\r\n    const item = items[id];\r\n    if (item.step < step) step = item.step;\r\n  })\r\n  return step;\r\n}\r\n\r\nexport function merge(arrays) {\r\n  let result = [];\r\n  for (let i = 0; i < arrays[0].length; i++) {\r\n    result.push([]);\r\n    for (let arr of arrays) {\r\n      result[i].push(arr[i]);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function arange(bounds, step) {\r\n  let start = bounds[0];\r\n  let stop = bounds[1];\r\n  let result = [];\r\n  while (start < stop) {\r\n    result.push(start);\r\n    start += step;\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function scale(item, bounds, step) {\r\n  const start = bounds[0];\r\n  const stop = bounds[1];\r\n  const result = [];\r\n  const drawStart = item.offset / step;\r\n  const drawEnd = drawStart + item.yData.length * item.step / step;\r\n  for (let i = start/step; i < stop/step; i++) {\r\n    if (i < drawStart || i >= drawEnd) {\r\n      result.push(null);\r\n    }\r\n    else {\r\n      const idx = Math.round((i - drawStart) * step / item.step);\r\n      result.push(item.yData[idx]);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function scale2(item, bounds, step) {\r\n  const start = bounds[0];\r\n  const stop = bounds[1];\r\n  const arrLength = Math.round((stop - start) / step);\r\n  const result = new Array(arrLength).fill(null);\r\n  item.yData.forEach((value, i) => {\r\n    const time = (item.step ? i * item.step : item.xData[i]) + item.offset;\r\n    const idx = Math.round((time - start) / step);\r\n    result[idx] = value;\r\n  })\r\n\r\n  return result;\r\n}","import Dygraph from 'dygraphs';\r\nimport \"./dygraph.css\";\r\nimport React from 'react';\r\nimport { getBounds, getStep, scale2, arange, merge } from \"../Utils\";\r\n\r\nclass Graph extends React.Component {\r\n\r\n  render() {\r\n    const items = this.props.graph.items.map(id => {\r\n      const item = this.props.items[id];\r\n      return <LegendItem item={item} key={item.id}\r\n        delItem={itemId => this.props.updGraphItem({\r\n          graphId: this.props.graph.id, \r\n          itemId: itemId, \r\n          add: false \r\n        })}\r\n      />\r\n    })\r\n\r\n    return(\r\n      <div \r\n        style={{\r\n          border: \"1px solid gray\", \r\n          resize: \"vertical\",\r\n          overflow: \"hidden\",\r\n          height: \"200px\", \r\n          display: \"flex\",\r\n          flexDirection: \"row\"\r\n        }}\r\n        onDragOver={e => e.preventDefault()}\r\n        onDrop={e => {\r\n          e.preventDefault();\r\n          const itemId = Number(e.dataTransfer.getData(\"text\"));\r\n          if (this.props.graph.items.includes(itemId)) {return;}\r\n          this.props.updGraphItem({\r\n            graphId: this.props.graph.id, \r\n            itemId: itemId, \r\n            add: true\r\n          })\r\n        }}\r\n      >\r\n        <div style={{\r\n          flex: \"0 0 150px\", \r\n          display: \"flex\", \r\n          flexDirection:\"column\"\r\n        }}>\r\n          <div style={{flex:\"1 1\", display:\"flex\", flexDirection:\"column\"}}>\r\n            {items}\r\n          </div>\r\n          <div style={{flex: \"0 0 30px\"}}>\r\n            <button type=\"button\" \r\n              onClick={() => this.props.delGraph(this.props.graph.id)}\r\n            >\r\n              &#10060;\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div id={\"dy\"+String(this.props.graph.id)} style={{\r\n          width: \"calc(100% - 150px)\", \r\n          paddingBottom: \"20px\"\r\n        }}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.dygraph = new Dygraph(\"dy\"+String(this.props.graph.id), [[0, 0]],\r\n      {\r\n        labels: [\"x\", \"y\"],\r\n        legend: \"follow\",\r\n        connectSeparatedPoints: true,\r\n      }\r\n    );\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"UPDATING GRAPHS\")\r\n    const step = this.props.step;\r\n    const graphBounds = getBounds(this.props.graph.items, this.props.items);\r\n    const labels = [\"x\"];\r\n    const colors = [];\r\n    const dataArr = [arange(graphBounds, step)];\r\n    this.props.graph.items.forEach(id => {\r\n      const item = this.props.items[id];\r\n      colors.push(item.color);\r\n      labels.push(item.name);\r\n      dataArr.push(scale2(item, graphBounds, step));\r\n    });\r\n    let data = merge(dataArr);\r\n    if (labels.length <= 1) {\r\n      labels.push(\"y\");\r\n      data = [[0, 0]];\r\n    }\r\n    this.dygraph.updateOptions({\r\n      file: data,\r\n      labels: labels,\r\n      colors: colors,\r\n      dateWindow: this.props.bounds,\r\n      axes: {\r\n        x: { drawAxis: this.props.drawX },\r\n        y: { drawAxis: this.props.drawY }\r\n      },\r\n  });\r\n  }\r\n}\r\n\r\nfunction LegendItem(props) {\r\n  return (\r\n    <div style={{\r\n      color: props.item.color, \r\n      fontWeight: \"bold\", \r\n      whiteSpace:\"nowrap\", \r\n      overflow:\"hidden\"\r\n    }}>\r\n      <button onClick={e => {props.delItem(props.item.id)}}>x</button>\r\n      {props.item.name}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Graph;","import React from 'react';\r\nimport Graph from \"./Graph\";\r\nimport { getBounds } from \"../Utils\";\r\n\r\nclass GraphPane extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { step: 1e-5, drawX: true, drawY: true };\r\n  }\r\n\r\n  render() {\r\n    const bounds = getBounds(\r\n      getActiveItems(this.props.graphs), \r\n      this.props.items\r\n    );\r\n    const graphs = Object.entries(this.props.graphs).map(([id, graph]) => {\r\n      return (\r\n        <Graph key={id} \r\n          delGraph={this.props.delGraph}\r\n          updGraphItem={this.props.updGraphItem}\r\n          items={this.props.items} \r\n          graph={graph}\r\n          bounds={bounds}\r\n          step={this.state.step}\r\n          drawX={this.state.drawX}\r\n          drawY={this.state.drawY}\r\n        />\r\n      )\r\n    })\r\n\r\n    return(\r\n      <div style={{display: \"flex\", flexDirection: \"column\", overflow: \"auto\"}}>\r\n        <div style={{flex: \"0 0 20px\", border: \"1px solid\"}}>\r\n          <button onClick={this.props.addGraph}>+</button>\r\n          <input \r\n            type=\"number\"\r\n            step=\"any\"\r\n            defaultValue={this.state.step}\r\n            onBlur={e => {\r\n              this.setState({ step: Number(e.target.value) })\r\n              console.log(e)\r\n            }}\r\n          />\r\n          <input type=\"checkbox\" defaultChecked onClick={e => {\r\n            this.setState({ drawX: e.target.checked });\r\n          }}/>\r\n          <input type=\"checkbox\" defaultChecked onChange={e => {\r\n            this.setState({ drawY: e.target.checked });\r\n          }}/>\r\n        </div>\r\n        {graphs}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction getActiveItems(graphs) {\r\n  const items = [];\r\n  Object.values(graphs).forEach(graph => {\r\n    graph.items.forEach(item => {\r\n      if (!items.includes(item)) items.push(item);\r\n    })\r\n  })\r\n  return items;\r\n}\r\n\r\nexport default GraphPane;","import React from \"react\";\r\nimport Papa from \"papaparse\";\r\n\r\nclass FileSelect extends React.Component {\r\n  componentDidMount(){\r\n    this.fileSelector = document.createElement(\"input\");\r\n    this.fileSelector.setAttribute(\"type\", \"file\");\r\n    this.fileSelector.setAttribute( \"accept\", \".csv\");\r\n    this.fileSelector.addEventListener(\"change\", e => {\r\n      loadCSV(e, this.props.addItem, this.format);\r\n    });\r\n  }\r\n  \r\n  handleFileSelect = (e) => {\r\n    if (e.target.value === \"DEFAULT\") return;\r\n    this.format = e.target.value;\r\n    this.fileSelector.click();\r\n    e.target.value = \"DEFAULT\";\r\n  }\r\n  \r\n  render(){\r\n    return(\r\n      <select onChange={this.handleFileSelect} defaultValue={\"DEFAULT\"}>\r\n        <option value=\"DEFAULT\" disabled hidden>Add</option>\r\n        <option value=\"tek\">Tektronix</option>\r\n        <option value=\"custom\">Custom</option>\r\n      </select>\r\n    )\r\n  }\r\n}\r\n\r\nfunction loadCSV(event, callback, format) {\r\n  const file = event.target.files[0];\r\n  const reader = new FileReader();\r\n\r\n  reader.addEventListener('load', event => {\r\n    console.log(\"Loading CSV into array...\");\r\n    let csv = Papa.parse(event.target.result, { skipEmptyLines: true }).data;\r\n    console.log(\"Parsing CSV array...\")\r\n    if (format === \"tek\") callback(parseOldTek(csv));\r\n    else if (format === \"custom\") callback(parseCustom(csv));\r\n    \r\n  });\r\n  reader.readAsText(file);\r\n}\r\n\r\nfunction parseOldTek(csv) {\r\n  const step = Number(csv[1][1]);\r\n  const nPoints = Number(csv[0][1]);\r\n  const name = csv[4][0];\r\n  const data = []\r\n  for (let i = 0; i < nPoints; i++) {\r\n    data.push(Number(csv[i][4]));\r\n  }\r\n  return {\r\n    name: name, \r\n    yData: data, \r\n    step: step, \r\n    color: getRandomColor(0, 155),\r\n    offset: 0\r\n  };\r\n}\r\n\r\nfunction parseCustom(csv) {\r\n  const xData = [];\r\n  const yData = [];\r\n  csv.forEach(line => {\r\n    xData.push(Number(line[0]));\r\n    yData.push(Number(line[1]));\r\n  });\r\n  return {\r\n    name: \"Custom\",\r\n    xData: xData,\r\n    yData: yData,\r\n    color: getRandomColor(0, 155),\r\n    offset: 0\r\n  }\r\n}\r\n\r\n// Generate random Hex color codes with given min/max rgb values\r\nexport function getRandomColor(min, max) {\r\n  let r = Math.floor(Math.random() * (max - min) + min);\r\n  let g = Math.floor(Math.random() * (max - min) + min);\r\n  let b = Math.floor(Math.random() * (max - min) + min);\r\n  let color = \"#\" + r.toString(16).padStart(2, '0') + \r\n    g.toString(16).padStart(2, '0') + b.toString(16).padStart(2, '0');\r\n  return color;\r\n}\r\n\r\nexport default FileSelect;","import React from 'react';\r\n\r\nfunction DataItem(props) {\r\n  return (\r\n    <div style={{\r\n      display:\"flex\",\r\n      border: \"1px solid black\", \r\n      flex: \"0 0 30px\", \r\n      alignItems: \"center\",\r\n      margin: \"2px\"\r\n    }}>\r\n      <div style={{flex:\"0 0 30px\", padding:\"4px\", borderRight:\"1px solid\"}}>\r\n        <input \r\n          type=\"color\" \r\n          draggable=\"true\" \r\n          defaultValue={props.item.color} \r\n          onChange={e => props.updItem({\r\n            color: e.target.value, \r\n            id: props.item.id\r\n          })}\r\n          onDragStart={\r\n            e => e.dataTransfer.setData(\"text\", props.item.id)\r\n          }\r\n        />\r\n      </div>\r\n      <div style={{\r\n        flex:\"1 1\", \r\n        overflow:\"hidden\", \r\n        padding:\"4px\", \r\n        whiteSpace:\"nowrap\"\r\n      }}>\r\n        <input \r\n          type=\"text\" \r\n          defaultValue={props.item.name} \r\n          onBlur={e => props.updItem({\r\n            name: e.target.value, \r\n            id: props.item.id\r\n          })}\r\n        />\r\n        <input \r\n          type=\"number\" \r\n          placeholder=\"xOffset\" \r\n          step=\"any\"\r\n          onBlur={e => props.updItem({\r\n            offset: Number(e.target.value), \r\n            id: props.item.id\r\n          })}\r\n        />\r\n        <button type=\"button\">&#128712;</button>\r\n        <button type=\"button\" onClick={() => props.delItem(props.item.id)}>\r\n          &#10060;\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DataItem;","import React from 'react';\r\nimport FileSelect from \"./FileSelect\";\r\nimport DataItem from \"./DataItem\";\r\n\r\nfunction DataPane(props) {\r\n  const items = Object.values(props.items).map(item => {\r\n    return <DataItem \r\n      item={item} \r\n      updItem={props.updItem} \r\n      delItem={props.delItem} \r\n      key={item.id}\r\n    />;\r\n  })\r\n\r\n  return(\r\n    <div style={{\r\n      display: \"flex\", \r\n      flexDirection: \"column\", \r\n      borderWidth: \"thin\", \r\n      border: \"1px solid black\"\r\n    }}>\r\n      <div style={{\r\n        display: \"flex\", \r\n        flexDirection: \"row\", \r\n        border: \"1px solid black\", \r\n        flex: \"0 0 20px\"\r\n      }}>\r\n        <FileSelect addItem={props.updItem}/>\r\n      </div>\r\n      <div style={{display: \"flex\", flexDirection: \"column\", flex: \"1 1\"}}>\r\n        {items}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DataPane;","import React from 'react';\r\n\r\nclass UtilPane extends React.Component {\r\n  render() {\r\n    return(\r\n      <div style={{\r\n        flex: \"1 1 100px\", \r\n        borderWidth: \"thin\", \r\n        borderStyle: \"solid\"\r\n      }}>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UtilPane","import React from \"react\";\r\nimport Split from \"react-split\";\r\nimport GraphPane from \"./components/GraphPane\";\r\nimport DataPane from \"./components/DataPane\";\r\nimport UtilPane from \"./components/UtilPane\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { items: {}, nItems: 0, graphs: {}, nGraphs: 0 };\r\n    this.updItem = this.updItem.bind(this);\r\n    this.delItem = this.delItem.bind(this);\r\n    this.addGraph = this.addGraph.bind(this);\r\n    this.delGraph = this.delGraph.bind(this);\r\n    this.updGraphItem = this.updGraphItem.bind(this);\r\n  }\r\n\r\n  updItem(item) {\r\n    const items = {...this.state.items};\r\n    if (items.hasOwnProperty(item.id)) {\r\n      items[item.id] = {...items[item.id], ...item};\r\n    } else {\r\n      item.id = this.state.nItems + 1;\r\n      items[item.id] = item;\r\n    }\r\n    this.setState({items: items, nItems: item.id});\r\n  }\r\n\r\n  delItem(id) {\r\n    console.log(\"DELETING\")\r\n    console.log(id)\r\n    const items = {...this.state.items};\r\n    delete items[id];\r\n\r\n    const graphs = {...this.state.graphs};\r\n    Object.values(graphs).forEach(graph => {\r\n      if (graph.items.includes(id)) {\r\n        graph.items.splice(graph.items.indexOf(id), 1);\r\n      }\r\n    })\r\n    this.setState({items: items, graphs: graphs});\r\n  }\r\n\r\n  addGraph() {\r\n    const graphs = {...this.state.graphs};\r\n    const id = this.state.nGraphs + 1;\r\n    graphs[id] = {id: id, items: []};\r\n    this.setState({graphs: graphs, nGraphs: id});\r\n    console.log(\"Adding Graphs:\")\r\n    console.log(graphs)\r\n  }\r\n\r\n  delGraph(id) {\r\n    const graphs = {...this.state.graphs};\r\n    delete graphs[id];\r\n    this.setState({graphs: graphs});\r\n  }\r\n\r\n  updGraphItem({graphId, itemId, add}) {\r\n    const graphs = {...this.state.graphs};\r\n    const graph = graphs[graphId];\r\n    if (add) {\r\n      graph.items.push(itemId);\r\n    } else {\r\n      graph.items.splice(graph.items.indexOf(itemId), 1);\r\n    }\r\n    this.setState({graphs: graphs});\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n      <Split \r\n        sizes={[25,50,25]} \r\n        gutterAlign=\"start\" \r\n        minSize={150}\r\n        onDrag={() => window.dispatchEvent(new Event('resize'))}\r\n        style={{display: \"flex\", flexDirection: \"row\"}}\r\n      >\r\n        <DataPane \r\n          items={this.state.items} \r\n          updItem={this.updItem}\r\n          delItem={this.delItem}\r\n        />\r\n        <GraphPane \r\n          items={this.state.items}\r\n          graphs={this.state.graphs}\r\n          addGraph={this.addGraph} \r\n          delGraph={this.delGraph}\r\n          updGraphItem={this.updGraphItem}\r\n        />\r\n        <UtilPane />\r\n      </Split>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\";\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}